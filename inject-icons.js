/*
 * Post-build script to add icon HTML template snippets from source/icon_templates
 * to the public/index.html file generated by HtmlWebpackPlugin
 */
const fs = require('fs');
const path = require('path');

const iconsDir = path.join(__dirname, 'source', 'icon_templates'); 
const indexHtmlPath = path.join(__dirname, 'public', 'index.html'); 

// Returns string of concatenated icon snippets (new line separated)
function readSnippets() {
  const files = fs.readdirSync(iconsDir).filter(file => path.extname(file) === '.html');
  return files.map(file => {
    const filePath = path.join(iconsDir, file);
    return fs.readFileSync(filePath, 'utf8');
  }).join('\n');
}

function injectHtml() {
  const startMarker = '<!-- ICONS-HTML-START -->';
  const endMarker = '<!-- ICONS-HTML-END -->';

  let mainContent = fs.readFileSync(indexHtmlPath, 'utf8');
  const snippetsHtml = readSnippets();

  const regex = new RegExp(`(${startMarker})([\\s\\S]*?)(${endMarker})`, 'm');

  if (!regex.test(mainContent)) {
    console.error(`Markers not found in ${indexHtmlPath}`);
    process.exit(1);
  }

  const newContent = mainContent.replace(regex, `$1\n${snippetsHtml}\n$3`);

  fs.writeFileSync(indexHtmlPath, newContent, 'utf8');
  console.log(`Injected icons HTML blob into ${indexHtmlPath}`);
}

injectHtml();

